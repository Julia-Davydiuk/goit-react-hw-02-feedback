{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","name","App","state","e","value","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","ceil","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAeeA,EAZC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,oCACI,6BAAKD,IACJC,MCMMC,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,qCACI,0CAAaJ,KACb,6CAAgBC,KAChB,yCAAYC,KACZ,2CAAcC,OACd,uDAA0BC,IAA1B,WCUOC,EAhBS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,gBAAX,OACxB,8BACID,EAAQE,KAAI,SAACC,GAAD,OACR,wBAEIC,KAAK,SACLC,QAASJ,EACTK,KAAMH,EAJV,SAKKA,GAJIA,SC4CFI,E,4MA5CXC,MAAQ,CACJd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTK,gBAAkB,SAAAQ,GACd,IAAMC,EAAQD,EAAEE,OAAOD,MACvB,EAAKE,UAAS,SAAAC,GAAS,sBAClBH,EAAQG,EAAUH,GAAS,O,EAGpCI,mBAAqB,WAEjB,OADmBC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKR,GAAN,OAAgBQ,EAAMR,IAAO,I,EAIrFS,gCAAkC,WAE9B,OAD2BC,KAAKC,KAAM,EAAKb,MAAMd,KAAO,EAAKoB,qBAAwB,M,4CAIzF,WACI,OACI,gCACI,cAAC,EAAD,CAASvB,MAAM,wBAAf,SACI,cAAC,EAAD,CACIS,QAASe,OAAOO,KAAKC,KAAKf,OAC1BP,gBAAiBsB,KAAKtB,oBAG9B,cAAC,EAAD,CAASV,MAAM,aAAf,SACI,cAAC,EAAD,CACIG,KAAM6B,KAAKf,MAAMd,KACjBC,QAAS4B,KAAKf,MAAMb,QACpBC,IAAK2B,KAAKf,MAAMZ,IAChBC,MAAO0B,KAAKT,mBACZhB,mBAAoByB,KAAKJ,2C,GAtC/BK,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b0d53f71.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({title, children}) => (\r\n    <section>\r\n        <h2>{title}</h2>\r\n        {children}\r\n    </section>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage}) => (\r\n    <>\r\n        <span>Good: {good}</span>\r\n        <span>Neutral: {neutral}</span>\r\n        <span>Bad: {bad}</span>\r\n        <span>Total: {total()}</span>\r\n        <span>Positive feedback: {positivePercentage()}%</span>\r\n    </>\r\n);\r\n\r\nexport default Statistics;","import React from 'react';\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => (\r\n<div>\r\n   {options.map((option) => (\r\n        <button\r\n            key={option}\r\n            type=\"button\"\r\n            onClick={onLeaveFeedback}\r\n            name={option}>\r\n            {option}\r\n        </button>\r\n    ))} \r\n</div>\r\n        \r\n\r\n);\r\n\r\nexport default FeedbackOptions;","import React, { Component } from 'react';\r\nimport Section from './components/Section'\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n    };\r\n\r\n    onLeaveFeedback = e => {\r\n        const value = e.target.value;\r\n        this.setState(prevState => ({\r\n            [value]: prevState[value] + 1 }))\r\n    }\r\n\r\n    countTotalFeedback = () => {\r\n        const totalValue = Object.values(this.state).reduce((acc, value) => acc + value, 0);\r\n        return totalValue;\r\n    };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        const positivePercentage = Math.ceil((this.state.good / this.countTotalFeedback()) * 100);\r\n        return positivePercentage;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Section title=\"Please leave feedback\">\r\n                    <FeedbackOptions\r\n                        options={Object.keys(this.state)}\r\n                        onLeaveFeedback={this.onLeaveFeedback}/>\r\n                </Section>\r\n                \r\n                <Section title=\"Statistics\">\r\n                    <Statistics\r\n                        good={this.state.good}\r\n                        neutral={this.state.neutral}\r\n                        bad={this.state.bad}\r\n                        total={this.countTotalFeedback}\r\n                        positivePercentage={this.countPositiveFeedbackPercentage}/>\r\n                </Section>\r\n            </div>  \r\n        );\r\n    };\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}